name: ekizu CI
on:
  push:
    branches:
      - main
      - dev
    paths:
      - "**ci.yml"
      - "**.hpp"
      - "**.cpp"
      - "**CMakeLists.txt"
  pull_request:
    branches:
      - main
      - dev
    paths:
      - "**ci.yml"
      - "**.hpp"
      - "**.cpp"
      - "**CMakeLists.txt"

jobs:
  linux:
    name: Linux ${{ matrix.arch }} (${{ matrix.gcc-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64]
        gcc-version: ["g++-9", "g++-10", "g++-12"]
        os: ["ubuntu-22.04"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y cmake ${{ matrix.gcc-version }} libssl-dev ninja-build rpm zlib1g-dev

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          boost_version: 1.81.0

      - name: Configure CMake
        run: cmake -S . -B build -G Ninja
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
          CXX: ${{ matrix.gcc-version }}

      - name: Build
        run: cmake --build build --config Release

      - name: Package
        run: cd build && cpack --verbose

      - name: Upload Binary (DEB)
        uses: actions/upload-artifact@v3
        with:
          name: "libekizu - Debian Package ${{ matrix.arch }}"
          path: "${{ github.workspace }}/build/*.deb"

      - name: Upload Binary (RPM)
        uses: actions/upload-artifact@v3
        with:
          name: "libekizu - RPM Package ${{ matrix.arch }}"
          path: "${{ github.workspace }}/build/*.rpm"
  windows:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86]
        config: [Release, Debug]
        vs:
          - { name: 2019, version: 16, os: windows-2019 }
          - { name: 2022, version: 17, os: windows-2022 }

    name: "Windows ${{ matrix.arch }}-${{ matrix.config }}-vs${{ matrix.vs.name }}"
    runs-on: ${{ matrix.vs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Install OpenSSL
        uses: johnwason/vcpkg-action@v5
        id: vcpkg
        with:
          pkgs: openssl zlib
          triplet: ${{ matrix.arch }}-windows-static
          cache-key: ${{ runner.os }}-${{ matrix.arch }}-vcpkg
          token: ${{ github.token }}

      - name: Configure CMake (x64)
        if: ${{ matrix.arch == 'x64' }}
        run: cmake ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -S . -B build -G "Visual Studio ${{ matrix.vs.version }} ${{ matrix.vs.name }}" -A x64 -T host=x64

      - name: Configure CMake (x86)
        if: ${{ matrix.arch == 'x86' }}
        run: cmake ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -S . -B build -G "Visual Studio ${{ matrix.vs.version }} ${{ matrix.vs.name }}" -A Win32 -T host=x86

      - name: Build
        run: cmake --build build --config ${{ matrix.config }}

      - name: Package
        run: cd build && cpack -C ${{ matrix.config }} --verbose

      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: "libekizu - Windows ${{ matrix.arch }}-${{ matrix.config }}-vs${{ matrix.vs.name }}"
          path: "${{ github.workspace }}/build/*.zip"
